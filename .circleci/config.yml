version: 2.1

commands:
  exports:
    steps:
      - run:
          name: "Export environment variable"
          command: |
            echo 'export PROJECT_ROOT_DIR="/home/circleci/project/build-cicd-pipeline/final-project"' >> "$BASH_ENV"

jobs:
  build-frontend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - exports
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: "Build frontend"
          command: |
            cd $PROJECT_ROOT_DIR/frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
  
  build-backend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - exports
      - restore_cache:
          keys: [backend-build]
      - run:
          name: "Build backend"
          command: |
            cd $PROJECT_ROOT_DIR/backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  test-frontend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      # Checkout code from git
      - checkout
      - exports
      # Restore from cache
      - restore_cache:
          keys: [frontend-build]
      # Your job code here
      - run:
          name: "Test frontend"
          command: |
            cd $PROJECT_ROOT_DIR/frontend
            npm install
            npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  test-backend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      # Checkout code from git
      - checkout
      - exports
      # Restore from cache
      - restore_cache:
          keys: [backend-build]
      # Your job code here
      - run:
          name: "Test backend"
          command: |
            cd $PROJECT_ROOT_DIR/backend
            npm install
            npm run test
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  scan-frontend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      # Checkout code from git
      - checkout
      - exports
      # Restore from cache
      - restore_cache:
          keys: [frontend-build]
      # Your job code here
      - run:
          name: "Scan frontend"
          command: |
            cd $PROJECT_ROOT_DIR/frontend
            npm install
            npm audit fix --audit-level=critical --force
            # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
            npm audit fix --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  scan-backend:
    docker:
      # circleci/node is deprecated, use cimg/node instead
      - image: cimg/node:13.8.0
    steps:
      # Checkout code from git
      - checkout
      - exports
      # Restore from cache
      - restore_cache:
          keys: [backend-build]
      # Your job code here
      - run:
          name: "Scan backend"
          command: |
            cd $PROJECT_ROOT_DIR/backend
            npm install
            npm audit fix --audit-level=critical --force
            # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
            npm audit fix --force
            npm audit --audit-level=critical
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build


workflows:
  final-project-workflows:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - "build-frontend"
      - test-backend:
          requires:
            - "build-backend"
      - scan-frontend:
          requires:
            - "build-frontend"
      - scan-backend:
          requires:
            - "build-backend"